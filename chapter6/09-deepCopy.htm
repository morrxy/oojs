<!DOCTYPE html>
<html>
<head>
	<title></title>
</head>
<body>

<h1>when you encounter a property that points to an object, you call the deep copy function again</h1>

<p>from book Object Oriented Javascript pdf version, page 201</p>

<pre>
function deepCopy(p, c) {
	var c = c || {};
	for (var i in p) {
		if (typeof p[i] === 'object') {
			c[i] = (p[i].constructor === Array) ? [] : {};
			deepCopy(p[i], c[i]);
		} else {
			c[i] = p[i];
		}
	}
	return c;
}

function extendCopy(p) {
	var c = {};
	for (var i in p) {
		c[i] = p[i];
	}
	c.uber = p;
	return c;
}

var parent = {
	numbers: [1, 2, 3],
	letters: ['a', 'b', 'c'],
	obj: {
		prop: 1
	},
	bool: true
};

var mydeep = deepCopy(parent);
var myshallow = extendCopy(parent);

console.log(mydeep.numbers.push(4, 5, 6));
console.log(mydeep.numbers);
console.log(parent.numbers);
console.log(myshallow.numbers.push(10));
console.log(myshallow.numbers);
console.log(parent.numbers);
console.log(mydeep.numbers);
</pre>

<script type="text/javascript">

function deepCopy(p, c) {
	var c = c || {};
	for (var i in p) {
		if (typeof p[i] === 'object') {
			c[i] = (p[i].constructor === Array) ? [] : {};
			deepCopy(p[i], c[i]);
		} else {
			c[i] = p[i];
		}
	}
	return c;
}

function extendCopy(p) {
	var c = {};
	for (var i in p) {
		c[i] = p[i];
	}
	c.uber = p;
	return c;
}

var parent = {
	numbers: [1, 2, 3],
	letters: ['a', 'b', 'c'],
	obj: {
		prop: 1
	},
	bool: true
};

var mydeep = deepCopy(parent);
var myshallow = extendCopy(parent);

console.log(mydeep.numbers.push(4, 5, 6));
console.log(mydeep.numbers);
console.log(parent.numbers);
console.log(myshallow.numbers.push(10));
console.log(myshallow.numbers);
console.log(parent.numbers);
console.log(mydeep.numbers);

</script>

</body>
</html>