<!DOCTYPE html>
<html>
<head>
	<title></title>
</head>
<body>

<h1>you can also create objects without the help of a construction functon,just by using the objet literal</h1>

<p>from book Object Oriented Javascript pdf version, page 200</p>

<pre>
function extendCopy(p) {
	var c = {};
	for (var i in p) {
		c[i] = p[i];
	}
	c.uber = p;
	return c;
}

var shape = {
	name: 'shape',
	toString: function() {
		return this.name;
	}
};

var twoDee = extendCopy(shape);
twoDee.name = '2D shape';
twoDee.toString = function() {
	return this.uber.toString() + ', ' + this.name;
};

var triangle = extendCopy(twoDee);
triangle.name = 'Triangle';
triangle.getArea = function() {
	return this.side * this.height / 2;
};

// using the triangle:
triangle.side = 5;
triangle.height = 10;
console.log(triangle.getArea());
console.log(triangle.toString());
</pre>

<script type="text/javascript">

function extendCopy(p) {
	var c = {};
	for (var i in p) {
		c[i] = p[i];
	}
	c.uber = p;
	return c;
}

var shape = {
	name: 'shape',
	toString: function() {
		return this.name;
	}
};

var twoDee = extendCopy(shape);
twoDee.name = '2D shape';
twoDee.toString = function() {
	return this.uber.toString() + ', ' + this.name;
};

var triangle = extendCopy(twoDee);
triangle.name = 'Triangle';
triangle.getArea = function() {
	return this.side * this.height / 2;
};

// using the triangle:
triangle.side = 5;
triangle.height = 10;
console.log(triangle.getArea());
console.log(triangle.toString());

</script>

</body>
</html>